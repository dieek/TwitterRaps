This file is to generate a list of sources for the tools used or considered for the bot.
Ruled Out section will provide list of items removed from consideration and a simple explanation as to why.

Software:
  1. Datamuse.com's API
    a. There is a python package "python-datamuse" (https://pypi.org/project/python-datamuse/) if deciding to use python to develop.
    b. This service can be used with up to 100,000 requests per day without an API key.  keep a log of overall requests made?
    http://www.datamuse.com/api/
  2. Use 7ESL list  to create a library list of common shorthand to work with.  
    a. Datamuse does not seem to catch popular internet/text shorthand (based on just one instance of searching of "wtf") so providing a pre-defined library will be best.
    https://7esl.com/texting-abbreviations/
      âœ“ i. Set up predefined dictionary object in JS or Python to check parsed text against
        https://github.com/dieek/TwitterRaps/blob/main/lib/Shorthand_Dict.csv
      ii. Generate dictionary object from two arrays, first with shorthand, second with full word   
    b. Run dictionary every input event in case updates are made.    
  3. Use of Tweepy, twitter api package for python
    a. Personally most comfortable with Python, so I thought I'd check this out.  May try other languages if presented with better framework.
    https://docs.tweepy.org
  4. Possibly use javascript to create twitter bot, host via node.js stack.  
    a. Creating a twitter bot in javascript
    https://lelouchb.medium.com/create-a-simple-yet-effective-twitter-bot-in-nodejs-javascript-4fbabc359404 
    b. Creating a node.js stack
    https://www.freecodecamp.org/news/develop-deploy-first-fullstack-web-app/
    c. Node.js directly on Synology NAS
    https://www.youtube.com/watch?v=tkbu3TT5LT8
    https://www.synology.com/en-us/dsm/packages/Node_js_v12
  5. PHP/Apache/etc based on usage of Synology NAS
    https://www.synology.com/en-us/knowledgebase/DSM/tutorial/Service_Application/How_to_host_a_website_on_Synology_NAS

Hardware:
  1. Personal Synology NAS as a a server to run bot
    To set up website/service on Synology NAS - following steps were taken:
      a. Downloaded Web Station, Apache, PHP
      b. Set up external link with DDNS (through Google Domains, same provider of web domain registration)
      c. Port forwarded router to NAS address on personal network
      d. Created "A record" for domain
      e. Linked domain to root folder created by Web Station
      et voila! (was hard to get it all that info in one place.  Might actually create a video describing those specific steps.)

No other packages are identified as of yet, but the list will be updated as new tools are defined and used.

Ruled Out:
  Software:
  Hardware:
    AWS Lamda - Able to set up personal NAS to access the internet.  Have all functionality on personal hardware- more control than renting server space.
    Heroku - Able to set up personal NAS to access the internet.  Have all functionality on personal hardware- more control than renting server space.
